name: Deploy MultiDocker K8s
on:
  push:
    branches:
      - master # check your repo, your default branch might be master!
  workflow_dispatch:

jobs:
  test-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-client-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./client
        run: npm install

      - name: Run tests
        working-directory: ./client
        run: npm test -- --watchAll=false
  
  build-push-images:
    runs-on: ubuntu-latest
    needs: test-app
    environment:
      name: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push images to Docker Hub
        run: |
          # Build images
          docker build -t ${{ secrets.DOCKER_USERNAME }}/worker:latest ./worker
          docker build -t ${{ secrets.DOCKER_USERNAME }}/server:latest ./server
          docker build -t ${{ secrets.DOCKER_USERNAME }}/client:latest ./client
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx:latest ./nginx

          # Push images
          docker push ${{ secrets.DOCKER_USERNAME }}/worker:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/server:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/client:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx:latest

  eb-deployment:
      runs-on: ubuntu-latest
      needs: [test-app, build-push-images]
      environment:
        name: prod-eb
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
            submodules: true

        - name: Generate deployment package
          run: zip -r deploy.zip . -x '*.git*'

        - name: Deploy to Elastic Beanstalk
          uses: einaregilsson/beanstalk-deploy@v18
          with:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
            aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
            application_name: multi-container-deploy-app
            environment_name: Multi-container-deploy-app-env
            existing_bucket_name: ${{ secrets.AWS_S3_BUCKET }}
            region: us-east-2
            version_label: ${{ github.sha }}
            deployment_package: deploy.zip
          
  k8s-deployment:
    runs-on: ubuntu-latest
    needs: [test-app]
    environment:
      name: prod
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1 # Use the latest version of the auth action
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1 # Use the latest version
        with:
          project_id: k8s-project-course
          # export_default_credentials: true # Ensures credentials are available for subsequent steps

      - name: Configure Docker Authentication
        run: gcloud auth configure-docker --quiet

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1 # Updated to v1
        with:
          cluster_name: multi-cluster-k8s-course
          location: us-central1-f

      - name: Build Docker Images
        run: |-
          docker build -t jaimetuyuc7/multi-client-k8s-gh:latest -t jaimetuyuc7/multi-client-k8s-gh:${{ github.sha }} -f ./client/Dockerfile ./client
          docker build -t jaimetuyuc7/multi-server-k8s-gh:latest -t jaimetuyuc7/multi-server-k8s-gh:${{ github.sha }} -f ./server/Dockerfile ./server
          docker build -t jaimetuyuc7/multi-worker-k8s-gh:latest -t jaimetuyuc7/multi-worker-k8s-gh:${{ github.sha }} -f ./worker/Dockerfile ./worker

      - name: Push Docker Images
        run: |-
          docker push jaimetuyuc7/multi-client-k8s-gh:latest
          docker push jaimetuyuc7/multi-server-k8s-gh:latest
          docker push jaimetuyuc7/multi-worker-k8s-gh:latest

          docker push jaimetuyuc7/multi-client-k8s-gh:${{ github.sha }}
          docker push jaimetuyuc7/multi-server-k8s-gh:${{ github.sha }}
          docker push jaimetuyuc7/multi-worker-k8s-gh:${{ github.sha }}

      - name: Apply Kubernetes Configurations
        run: |-
          kubectl apply -f k8s
          kubectl set image deployments/server-deployment server=jaimetuyuc7/multi-server-k8s-gh:${{ github.sha }}
          kubectl set image deployments/client-deployment client=jaimetuyuc7/multi-client-k8s-gh:${{ github.sha }}
          kubectl set image deployments/worker-deployment worker=jaimetuyuc7/multi-worker-k8s-gh:${{ github.sha }}
